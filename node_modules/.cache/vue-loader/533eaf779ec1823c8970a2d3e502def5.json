{"remainingRequest":"/Users/zhangzhou/MyProgram/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangzhou/MyProgram/demo/src/views/currency/currency.vue?vue&type=style&index=0&id=3687c3b6&scoped=true&lang=scss&","dependencies":[{"path":"/Users/zhangzhou/MyProgram/demo/src/views/currency/currency.vue","mtime":1580869908000},{"path":"/Users/zhangzhou/MyProgram/demo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangzhou/MyProgram/demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhangzhou/MyProgram/demo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhangzhou/MyProgram/demo/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangzhou/MyProgram/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangzhou/MyProgram/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgokYm9yZGVyLWNvbG9yOiByZ2JhKDEyOCwgMTI4LCAxMjgsIDAuMSk7CgppbnB1dCB7CiAgICBmb250LXNpemU6IDEuNmVtOwp9CgouZWRpdC1idG4gewogICAgY3Vyc29yOiBwb2ludGVyOwogICAgbWFyZ2luOiAwOwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgcGFkZGluZzogMC4yOGVtIDA7CgogICAgYm9yZGVyLWxlZnQ6ICRib3JkZXItY29sb3IgMXB4IHNvbGlkOwoKICAgICY6Zmlyc3QtY2hpbGQgewogICAgICAgIGJvcmRlci1ib3R0b206ICRib3JkZXItY29sb3IgMXB4IHNvbGlkOwogICAgfQp9CgouYWJick5hdGlvbiB7CiAgICBmb250LXdlaWdodDogYm9sZDsKICAgIGZvbnQtc2l6ZTogMS41ZW07Cn0KCi50YWJsZS1hbW91bnQgewogICAgZm9udC1zaXplOiAxLjZlbTsKfQoKLnRhYmxlLW1vbmV5LXVuaXQgewogICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7Cn0KCg=="},{"version":3,"sources":["currency.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"currency.vue","sourceRoot":"src/views/currency","sourcesContent":["<template xmlns=\"http://www.w3.org/1999/html\">\n    <div>\n        <!--Left Part-->\n        <div class=\"table-cell-left col\"\n             :class=\"{s10: isAppModeEdit, s12: !isAppModeEdit}\">\n            <!--Row 1-->\n            <!--Image and Abbr. of Currency-->\n            <div class=\"table-cell-name col s4\" @click=\"abbrClicked()\">\n                <img class=\"imgNation\" v-on:src=\"data.img\" alt=\"\">\n                <span class=\"abbrNation\">{{ abbr }}</span>\n            </div>\n            <!--Amount and Input-->\n            <div class=\"table-cell-number col s8\">\n                <div class=\"col s12\">\n                <span class=\"table-amount col s12 right-align\"\n                      v-show=\"!abbrInputEditing || abbr !== abbrInputEditing\"\n                      @click=\"toggleEditing(true)\">\n                    {{ data.amount }}\n                </span>\n                    <input class=\"table-input col s12 right-align\"\n                           type=\"number\"\n                           ref=\"input\"\n                           v-show=\"abbrInputEditing && abbr === abbrInputEditing\"\n                           v-model=\"amountEditing\"\n                           @blur=\"toggleEditing(false)\"\n                           @keyup.enter=\"toggleEditing(false)\"\n                           @keyup.esc=\"toggleEditing(false)\">\n                </div>\n            </div>\n            <!--Row 2-->\n            <div class=\"col s12\">\n                <span class=\"table-money-unit col s12 right-align\">{{ data.unit }}</span>\n            </div>\n        </div>\n\n\n\n\n        <!--Right Part-->\n        <div class=\"col s2\"\n             v-show=\"isAppModeEdit\"\n        >\n            <div class=\"row edit-btn\"\n                 @click=\"btnRemove()\">\n                <i class=\"fas fa-trash\"></i>\n            </div>\n\n            <div class=\"row handle edit-btn\">\n                <i class=\"fas fa-bars\"></i>\n<!--                <i class=\"material-icons\">view_headline</i>-->\n<!--                <i class=\"material-icons\">insert_chart</i>-->\n<!--                <i><a class=\"btn-floating yellow darken-1\"><i class=\"material-icons\">format_quote</i></a></i>-->\n<!--                <i><a class=\"btn-floating green\"><i class=\"material-icons\">publish</i></a></i>-->\n<!--                <i><a class=\"btn-floating blue\"><i class=\"material-icons\">attach_file</i></a></i>-->\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {mapState} from \"vuex\";\n\n    export default {\n        name: \"currency\",\n        // the abbreviation of currency to display for this component\n        props: [\"abbr\"],\n        data: function () {\n            return {\n                amountEditing: null\n            };\n        },\n        computed: {\n            /**\n             * Gets data to display\n             * @returns {img, unit, amount}\n             */\n            data () {\n                // console.log(this.$store.getters.getCurrency({\n                //     abbr: this.abbr\n                // }));\n                return this.$store.getters.getCurrency({\n                    abbr: this.abbr\n                });\n\n            },\n            ...mapState([\n                \"abbrInputEditing\",\n                \"isAppModeEdit\",\n                \"listAbbr\"\n            ])\n        },\n        methods: {\n            abbrClicked: function () {\n                // no need to mapMutations it\n                this.$store.commit(\"changeTopRow\", {\n                    abbr: this.abbr\n                });\n            },\n            toggleEditing: function (startEditing) {\n                // debounce\n                // if not editing this component and user is not exiting editing\n                // do nothing\n                if (this.abbrInputEditing !== this.abbr && !startEditing) {\n                    return;\n                }\n\n                // update the currency being edited to this one\n                this.$store.commit(\"toggleEditing\", {\n                    abbr: this.abbr\n                });\n\n                if (this.abbrInputEditing === this.abbr) {\n                    // start editing this component\n                    // update input value\n                    this.amountEditing = this.data.amount;\n\n                    // input focus\n                    // select\n                    const elm = this.$refs.input;\n                    elm.focus();\n                } else {\n                    // exit editing\n                    // update currency amount\n                    this.$store.commit(\"updateAmount\", {\n                        amount: this.amountEditing,\n                        abbr: this.abbr\n                    });\n                }\n\n            },\n            btnRemove: function () {\n                this.$store.commit('deleteAbbr', {\n                    abbr: this.abbr\n                });\n            }\n        },\n    };\n</script>\n\n<style scoped lang=\"scss\">\n    $border-color: rgba(128, 128, 128, 0.1);\n\n    input {\n        font-size: 1.6em;\n    }\n\n    .edit-btn {\n        cursor: pointer;\n        margin: 0;\n        text-align: center;\n        padding: 0.28em 0;\n\n        border-left: $border-color 1px solid;\n\n        &:first-child {\n            border-bottom: $border-color 1px solid;\n        }\n    }\n\n    .abbrNation {\n        font-weight: bold;\n        font-size: 1.5em;\n    }\n\n    .table-amount {\n        font-size: 1.6em;\n    }\n\n    .table-money-unit {\n        font-weight: lighter;\n    }\n\n</style>"]}]}