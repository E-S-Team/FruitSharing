{"remainingRequest":"/Users/zhangzhou/MyProgram/demo/node_modules/thread-loader/dist/cjs.js!/Users/zhangzhou/MyProgram/demo/node_modules/babel-loader/lib/index.js!/Users/zhangzhou/MyProgram/demo/src/common/store.js","dependencies":[{"path":"/Users/zhangzhou/MyProgram/demo/src/common/store.js","mtime":1580960994000},{"path":"/Users/zhangzhou/MyProgram/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangzhou/MyProgram/demo/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangzhou/MyProgram/demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/zhangzhou/MyProgram/demo/src/common/store.js"],"names":["Vue","Vuex","convertByRate","updateRateFromAPI","abbrNations","rates","logger","use","store","Store","state","STORAGE_KEY","willSave","isAppModeEdit","abbrInputEditing","abbr2NameEnglish","baseCurrency","amount","listAbbr","table","timestamp","mutations","load","tableRate","console","log","addSelected","selected","indexOf","push","changeTopRow","abbr","indexClicked","tmp","set","updateAmount","fromRate","toRate","toggleEditing","toggleAppModeEditing","deleteAbbr","length","alert","index","splice","actions","context","storage","JSON","parse","localStorage","getItem","commit","Date","now","data","save","setItem","stringify","getters","convertTo","from","to","Math","abs","parseFloat","isNaN","getCurrency","getter","img","unit","getAmount","round","getFilteredSelectList","ret","each","value","label","sort","a","b"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAAQC,aAAR,EAAuBC,iBAAvB,QAA+C,UAA/C;AACA,SAAQC,WAAR,EAAqBC,KAArB,QAAiC,WAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEAN,GAAG,CAACO,GAAJ,CAAQN,IAAR;AAEA,IAAMO,KAAK,GAAG,IAAIP,IAAI,CAACQ,KAAT,CAAe;AACzB;AACA;AACA;AACAC,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,WAAW,EAAE,yBAFV;AAGHC,IAAAA,QAAQ,EAAE,IAHP;AAKH;AACAC,IAAAA,aAAa,EAAE,KANZ;AAQH;AACAC,IAAAA,gBAAgB,EAAE,IATf;;AAWH;;;AAGAC,IAAAA,gBAAgB,EAAEX,WAdf;;AAgBH;;;;;;AAMAY,IAAAA,YAAY,EAAE;AACVC,MAAAA,MAAM,EAAE;AADE,KAtBX;;AA0BH;;;;;AAKAC,IAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,CA/BP;;AAiCH;;;;;;;AAOAC,IAAAA,KAAK,EAAEd,KAxCJ;;AA0CH;;;;;;;AAOAe,IAAAA,SAAS,EAAE;AAjDR,GAJkB;AAuDzB;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IADO,gBACFZ,KADE,QAC+C;AAAA,UAAzCO,MAAyC,QAAzCA,MAAyC;AAAA,UAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,UAAvBK,SAAuB,QAAvBA,SAAuB;AAAA,UAAZH,SAAY,QAAZA,SAAY;AAClDI,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA,OAACN,MAAD,KAAYP,KAAK,CAACM,YAAN,CAAmBC,MAAnB,GAA4BA,MAAxC;AACA,OAACC,QAAD,KAAcR,KAAK,CAACQ,QAAN,GAAiBA,QAA/B;AACA,OAACK,SAAD,KAAeb,KAAK,CAACS,KAAN,GAAcI,SAA7B;AACA,OAACH,SAAD,KAAeV,KAAK,CAACU,SAAN,GAAkBA,SAAjC;AACH,KARM;AASPM,IAAAA,WATO,qCAS6B;AAAA,UAAvBR,QAAuB,SAAvBA,QAAuB;AAAA,UAAXS,QAAW,SAAXA,QAAW;;AAChC,UAAI,CAAC,CAAD,KAAOT,QAAQ,CAACU,OAAT,CAAiBD,QAAjB,CAAX,EAAuC;AACnCT,QAAAA,QAAQ,CAACW,IAAT,CAAcF,QAAd;AACH;AACJ,KAbM;AAcPG,IAAAA,YAdO,sCAc0B;AAAA,UAAnBZ,QAAmB,SAAnBA,QAAmB;AAAA,UAAPa,IAAO,SAAPA,IAAO;;AAC7B,UAAIA,IAAI,KAAKb,QAAQ,CAAC,CAAD,CAArB,EAA0B;AACtB;AACH,OAH4B,CAK7B;;;AACA,UAAMc,YAAY,GAAGd,QAAQ,CAACU,OAAT,CAAiBG,IAAjB,CAArB,CAN6B,CAO7B;;AACA,UAAME,GAAG,GAAGf,QAAQ,CAACc,YAAD,CAApB,CAR6B,CAU7B;;AACAhC,MAAAA,GAAG,CAACkC,GAAJ,CAAQhB,QAAR,EAAkBc,YAAlB,EAAgCd,QAAQ,CAAC,CAAD,CAAxC;AACAlB,MAAAA,GAAG,CAACkC,GAAJ,CAAQhB,QAAR,EAAkB,CAAlB,EAAqBe,GAArB;AACH,KA3BM;AA4BPE,IAAAA,YA5BO,sCA4BuD;AAAA,UAAhDnB,YAAgD,SAAhDA,YAAgD;AAAA,UAAlCE,QAAkC,SAAlCA,QAAkC;AAAA,UAAxBC,KAAwB,SAAxBA,KAAwB;AAAA,UAAfF,MAAe,SAAfA,MAAe;AAAA,UAAPc,IAAO,SAAPA,IAAO;AAC1Df,MAAAA,YAAY,CAACC,MAAb,GAAsBf,aAAa,CAAC;AAChCkC,QAAAA,QAAQ,EAAEjB,KAAK,CAACY,IAAD,CADiB;AAEhCM,QAAAA,MAAM,EAAElB,KAAK,CAACD,QAAQ,CAAC,CAAD,CAAT,CAFmB;AAGhCD,QAAAA,MAAM,EAANA;AAHgC,OAAD,CAAnC;AAKH,KAlCM;AAmCPqB,IAAAA,aAnCO,yBAmCO5B,KAnCP,SAmCsB;AAAA,UAAPqB,IAAO,SAAPA,IAAO;;AACzB,UAAI,CAACA,IAAL,EAAW;AACPrB,QAAAA,KAAK,CAACI,gBAAN,GAAyB,IAAzB;AACA;AACH,OAJwB,CAMzB;AACA;;;AACA,UAAIiB,IAAI,KAAKrB,KAAK,CAACI,gBAAnB,EAAqC;AACjCJ,QAAAA,KAAK,CAACI,gBAAN,GAAyBJ,KAAK,CAACI,gBAAN,GAAyB,IAAzB,GAAgCiB,IAAzD;AACA;AACH,OAXwB,CAazB;AACA;;;AACArB,MAAAA,KAAK,CAACI,gBAAN,GAAyBiB,IAAzB;AACH,KAnDM;AAoDPQ,IAAAA,oBApDO,gCAoDc7B,KApDd,EAoDqB;AACxBA,MAAAA,KAAK,CAACG,aAAN,GAAsB,CAACH,KAAK,CAACG,aAA7B;AACH,KAtDM;AAuDP;AACA2B,IAAAA,UAxDO,qCAwD6C;AAAA,UAAxCtB,QAAwC,SAAxCA,QAAwC;AAAA,UAA9BF,YAA8B,SAA9BA,YAA8B;AAAA,UAAhBG,KAAgB,SAAhBA,KAAgB;AAAA,UAAPY,IAAO,UAAPA,IAAO;;AAChD,UAAIb,QAAQ,CAACuB,MAAT,IAAmB,CAAvB,EAA0B;AACtBC,QAAAA,KAAK,CAAC,iCAAD,CAAL;AACA;AACH;;AAED,UAAMC,KAAK,GAAGzB,QAAQ,CAACU,OAAT,CAAiBG,IAAjB,CAAd,CANgD,CAQhD;;AACA,UAAIY,KAAK,KAAK,CAAd,EAAiB;AACb3B,QAAAA,YAAY,CAACC,MAAb,GAAsBf,aAAa,CAAC;AAChCkC,UAAAA,QAAQ,EAAEjB,KAAK,CAACD,QAAQ,CAAC,CAAD,CAAT,CADiB;AAEhCmB,UAAAA,MAAM,EAAElB,KAAK,CAACD,QAAQ,CAAC,CAAD,CAAT,CAFmB;AAGhCD,UAAAA,MAAM,EAAED,YAAY,CAACC;AAHW,SAAD,CAAnC;AAKH,OAf+C,CAiBhD;;;AACAC,MAAAA,QAAQ,CAAC0B,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB;AACH;AA3EM,GA1Dc;AAuIzB;AACA;AACA;AACAE,EAAAA,OAAO,EAAE;AACLvB,IAAAA,IADK,gBACAwB,OADA,EACS;AACV,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBL,OAAO,CAACpC,KAAR,CAAcC,WAAnC,CAAX,CAAhB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYsB,OAAZ;;AAEA,UAAIA,OAAJ,EAAa;AACTD,QAAAA,OAAO,CAACM,MAAR,CAAe,MAAf,EAAuBL,OAAvB;AACH,OANS,CAQV;;;AACA,UAAKM,IAAI,CAACC,GAAL,KAAaR,OAAO,CAACpC,KAAR,CAAcU,SAA5B,GAAwC,CAA5C,EAA+C;AAC3C;AACAjB,QAAAA,iBAAiB,CAAC,UAACoD,IAAD,EAAU;AACxBT,UAAAA,OAAO,CAACM,MAAR,CAAe,MAAf,EAAuB;AACnB7B,YAAAA,SAAS,EAAEgC,IADQ;AAEnBnC,YAAAA,SAAS,EAAEiC,IAAI,CAACC,GAAL;AAFQ,WAAvB;AAIH,SALgB,CAAjB;AAMH;AACJ,KAnBI;AAoBL;AACAE,IAAAA,IArBK,wBAqBS;AAAA,UAAR9C,KAAQ,UAARA,KAAQ;;AACV,UAAI,CAACA,KAAK,CAACE,QAAX,EAAqB;AACjB;AACH;;AAEDsC,MAAAA,YAAY,CAACO,OAAb,CAAqB/C,KAAK,CAACC,WAA3B,EAAwCqC,IAAI,CAACU,SAAL,CAAe;AACnDzC,QAAAA,MAAM,EAAEP,KAAK,CAACM,YAAN,CAAmBC,MADwB;AAEnDC,QAAAA,QAAQ,EAAER,KAAK,CAACQ,QAFmC;AAGnDK,QAAAA,SAAS,EAAEb,KAAK,CAACS,KAHkC;AAInDC,QAAAA,SAAS,EAAEV,KAAK,CAACU;AAJkC,OAAf,CAAxC;AAMH;AAhCI,GA1IgB;AA4KzB;AACA;AACA;AACAuC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE;AAAA,UAAEzC,KAAF,UAAEA,KAAF;AAAA,aAAa,kBAAwB;AAAA,YAAtB0C,IAAsB,UAAtBA,IAAsB;AAAA,YAAhBC,EAAgB,UAAhBA,EAAgB;AAAA,YAAZ7C,MAAY,UAAZA,MAAY;AAC5CA,QAAAA,MAAM,GAAG8C,IAAI,CAACC,GAAL,CAASC,UAAU,CAAChD,MAAD,CAAnB,CAAT;;AACA,YAAIiD,KAAK,CAACjD,MAAD,CAAT,EAAmB;AACfA,UAAAA,MAAM,GAAG,CAAT;AACH;;AAED,YAAI4C,IAAI,KAAKC,EAAb,EAAiB;AACb,iBAAO7C,MAAP;AACH;;AAED,eAAOf,aAAa,CAAC;AACjBkC,UAAAA,QAAQ,EAAEjB,KAAK,CAAC0C,IAAD,CADE;AAEjBxB,UAAAA,MAAM,EAAElB,KAAK,CAAC2C,EAAD,CAFI;AAGjB7C,UAAAA,MAAM,EAANA;AAHiB,SAAD,CAApB;AAKH,OAfU;AAAA,KADN;AAiBLkD,IAAAA,WAAW,EAAE,6BAAqBC,MAArB;AAAA,UAAErD,gBAAF,UAAEA,gBAAF;AAAA,aAAgC,kBAAY;AAAA,YAAVgB,IAAU,UAAVA,IAAU;AACrDP,QAAAA,OAAO,CAACC,GAAR,CAAY;AAACV,UAAAA,gBAAgB,EAAhBA;AAAD,SAAZ;AACA,eAAO;AACH;AACAsD,UAAAA,GAAG,EAAE,EAFF;AAGHC,UAAAA,IAAI,EAAEvD,gBAAgB,CAACgB,IAAD,CAHnB;AAIHd,UAAAA,MAAM,EAAEmD,MAAM,CAACG,SAAP,CAAiB;AACrBxC,YAAAA,IAAI,EAAJA;AADqB,WAAjB;AAJL,SAAP;AAQH,OAVY;AAAA,KAjBR;AA4BL;AACAwC,IAAAA,SAAS,EAAE,2BAA2BH,MAA3B;AAAA,UAAElD,QAAF,UAAEA,QAAF;AAAA,UAAYF,YAAZ,UAAYA,YAAZ;AAAA,aAAsC,kBAAY;AAAA,YAAVe,IAAU,UAAVA,IAAU;AACzD,eAAOgC,IAAI,CAACS,KAAL,CAAWJ,MAAM,CAACR,SAAP,CAAiB;AAC/BC,UAAAA,IAAI,EAAE3C,QAAQ,CAAC,CAAD,CADiB;AAE/B4C,UAAAA,EAAE,EAAE/B,IAF2B;AAG/Bd,UAAAA,MAAM,EAAED,YAAY,CAACC;AAHU,SAAjB,IAIb,EAJE,IAII,EAJX;AAKH,OANU;AAAA,KA7BN;;AAoCL;;;;AAIAwD,IAAAA,qBAAqB,EAAE,uCAAkC;AAAA,UAAhCvD,QAAgC,UAAhCA,QAAgC;AAAA,UAAtBH,gBAAsB,UAAtBA,gBAAsB;AACrD,UAAI2D,GAAG,GAAG,EAAV;;AAEA,WAAK,IAAIC,IAAT,IAAiB5D,gBAAjB,EAAmC;AAC/B,YAAIG,QAAQ,CAACU,OAAT,CAAiB+C,IAAjB,MAA2B,CAAC,CAAhC,EAAmC;AAC/B;AACH;;AAEDD,QAAAA,GAAG,CAAC7C,IAAJ,CAAS;AACL+C,UAAAA,KAAK,EAAED,IADF;AAELE,UAAAA,KAAK,EAAE9D,gBAAgB,CAAC4D,IAAD;AAFlB,SAAT;AAIH;;AAED,aAAOD,GAAG,CAACI,IAAJ,CAAS,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC5B,eAAOD,CAAC,CAAC,OAAD,CAAD,GAAaC,CAAC,CAAC,OAAD,CAAd,GAA0B,CAAC,CAA3B,GAA+B,CAAtC;AACH,OAFM,CAAP;AAGH;AAzDI;AA/KgB,CAAf,CAAd;AA4OA,eAAexE,KAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\n\nimport {convertByRate, updateRateFromAPI} from './helper';\nimport {abbrNations, rates} from './data.js';\nimport logger from \"vuex/dist/logger\";\n\nVue.use(Vuex);\n\nconst store = new Vuex.Store({\n    ///////////\n    // STATE //\n    ///////////\n    state: {\n        // key for localStorage\n        STORAGE_KEY: 'jeff-currency-converter',\n        willSave: true,\n\n        // true if edit mode is on\n        isAppModeEdit: false,\n\n        // 当前正在编辑的国家的abbr\n        abbrInputEditing: null,\n\n        /**\n         * a dict of abbreviation of currency to the full name of the nation\n         */\n        abbr2NameEnglish: abbrNations,\n\n        /**\n         * The amount of the base currency (the first one in the list with red background)\n         * This will be stored in localStorage\n         *\n         * @type {{int}}\n         */\n        baseCurrency: {\n            amount: 1000\n        },\n\n        /**\n         * List of currencies on display\n         *\n         * This will be stored in localStorage\n         */\n        listAbbr: ['USD', 'CNY', 'EUR', 'JPY', 'HKD', 'KRW', 'AUD', 'GBP'],\n\n        /**\n         * Exchange rate of all currency to USD\n         *\n         * This will be stored in localStorage\n         *\n         * @type {{string}, {number}}\n         */\n        table: rates,\n\n        /**\n         * The timestamp of latest exchange rate\n         * Obtained by `new Date()`\n         * This will be stored in localStorage\n         *\n         * @type {number}\n         */\n        timestamp: 1517073986844,\n    },\n    ///////////////\n    // MUTATIONS //\n    ///////////////\n    mutations: {\n        load(state, {amount, listAbbr, tableRate, timestamp}) {\n            console.log(tableRate);\n\n            !amount || (state.baseCurrency.amount = amount);\n            !listAbbr || (state.listAbbr = listAbbr);\n            !tableRate || (state.table = tableRate);\n            !timestamp || (state.timestamp = timestamp);\n        },\n        addSelected({listAbbr}, {selected}) {\n            if (-1 === listAbbr.indexOf(selected)) {\n                listAbbr.push(selected);\n            }\n        },\n        changeTopRow({listAbbr}, {abbr}) {\n            if (abbr === listAbbr[0]) {\n                return;\n            }\n\n            // number, index\n            const indexClicked = listAbbr.indexOf(abbr);\n            // console.log(indexClicked);\n            const tmp = listAbbr[indexClicked];\n\n            // Move to top\n            Vue.set(listAbbr, indexClicked, listAbbr[0]);\n            Vue.set(listAbbr, 0, tmp);\n        },\n        updateAmount({baseCurrency, listAbbr, table}, {amount, abbr}) {\n            baseCurrency.amount = convertByRate({\n                fromRate: table[abbr],\n                toRate: table[listAbbr[0]],\n                amount\n            });\n        },\n        toggleEditing(state, {abbr}) {\n            if (!abbr) {\n                state.abbrInputEditing = null;\n                return;\n            }\n\n            // If we are editing the same currency\n            // Toggle edit mode\n            if (abbr === state.abbrInputEditing) {\n                state.abbrInputEditing = state.abbrInputEditing ? null : abbr;\n                return;\n            }\n\n            // Now editing other currency\n            // Stay in edit mode, but change the subject\n            state.abbrInputEditing = abbr;\n        },\n        toggleAppModeEditing(state) {\n            state.isAppModeEdit = !state.isAppModeEdit;\n        },\n        // Delete one item from list\n        deleteAbbr({listAbbr, baseCurrency, table}, {abbr}) {\n            if (listAbbr.length <= 1) {\n                alert(\"Cannot delete the last element!\");\n                return;\n            }\n\n            const index = listAbbr.indexOf(abbr);\n\n            // if deleting first element, change base currency to make sure the amount stay the same\n            if (index === 0) {\n                baseCurrency.amount = convertByRate({\n                    fromRate: table[listAbbr[0]],\n                    toRate: table[listAbbr[1]],\n                    amount: baseCurrency.amount\n                });\n            }\n\n            // delete the item at index\n            listAbbr.splice(index, 1);\n        }\n    },\n    /////////////\n    // ACTIONS //\n    /////////////\n    actions: {\n        load(context) {\n            const storage = JSON.parse(localStorage.getItem(context.state.STORAGE_KEY));\n            console.log(storage);\n\n            if (storage) {\n                context.commit('load', storage);\n            }\n\n            // 1000mill * 60sec * 60min * 24hr = 86400000\n            if ((Date.now() - context.state.timestamp) >0) {\n                // update exchange rate if it expires\n                updateRateFromAPI((data) => {\n                    context.commit('load', {\n                        tableRate: data,\n                        timestamp: Date.now()\n                    });\n                });\n            }\n        },\n        // save to localStorage\n        save({state}) {\n            if (!state.willSave) {\n                return;\n            }\n\n            localStorage.setItem(state.STORAGE_KEY, JSON.stringify({\n                amount: state.baseCurrency.amount,\n                listAbbr: state.listAbbr,\n                tableRate: state.table,\n                timestamp: state.timestamp\n            }));\n        },\n    },\n    /////////////\n    // GETTERS //\n    /////////////\n    getters: {\n        convertTo: ({table}) => ({from, to, amount}) => {\n            amount = Math.abs(parseFloat(amount));\n            if (isNaN(amount)) {\n                amount = 0;\n            }\n\n            if (from === to) {\n                return amount;\n            }\n\n            return convertByRate({\n                fromRate: table[from],\n                toRate: table[to],\n                amount\n            });\n        },\n        getCurrency: ({abbr2NameEnglish}, getter) => ({abbr}) => {\n            console.log({abbr2NameEnglish})\n            return {\n                // todo: img\n                img: '',\n                unit: abbr2NameEnglish[abbr],\n                amount: getter.getAmount({\n                    abbr\n                })\n            };\n        },\n        // get the amount to be displayed\n        getAmount: ({listAbbr, baseCurrency}, getter) => ({abbr}) => {\n            return Math.round(getter.convertTo({\n                from: listAbbr[0],\n                to: abbr,\n                amount: baseCurrency.amount\n            }) * 10) / 10;\n        },\n        /**\n         * Generate the content for drop down list\n         *\n         */\n        getFilteredSelectList: ({listAbbr, abbr2NameEnglish}) => {\n            let ret = [];\n\n            for (let each in abbr2NameEnglish) {\n                if (listAbbr.indexOf(each) !== -1) {\n                    continue;\n                }\n\n                ret.push({\n                    value: each,\n                    label: abbr2NameEnglish[each]\n                });\n            }\n\n            return ret.sort(function (a, b) {\n                return a[\"label\"] < b[\"label\"] ? -1 : 1;\n            });\n        }\n    }\n});\n\nexport default store;\n"]}]}